# DO NOT EDIT: This file is generated by terraform-autogen. Update the autogen_config.json file to change the generated code.

output "annotations" {
  description = <<DESCRIPTION
Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.

Cloud Run API v2 does not support annotations with 'run.googleapis.com', 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they will be rejected in new resources.
All system annotations in v1 now have a corresponding field in v2 Service.

This field follows Kubernetes annotations' namespacing, limits, and rules.

**Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.annotations
}

output "client" {
  description = <<DESCRIPTION
Arbitrary identifier for the API client.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.client
}

output "client_version" {
  description = <<DESCRIPTION
Arbitrary version identifier for the API client.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.client_version
}

output "conditions" {
  description = <<DESCRIPTION
The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Service does not reach its Serving state. See comments in reconciling for additional information on reconciliation process in Cloud Run.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.conditions
}

output "create_time" {
  description = <<DESCRIPTION
The creation time.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.create_time
}

output "creator" {
  description = <<DESCRIPTION
Email address of the authenticated creator.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.creator
}

output "custom_audiences" {
  description = <<DESCRIPTION
One or more custom audiences that you want this service to support. Specify each custom audience as the full URL in a string. The custom audiences are encoded in the token and used to authenticate requests.
For more information, see https://cloud.google.com/run/docs/configuring/custom-audiences.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.custom_audiences
}

output "delete_time" {
  description = <<DESCRIPTION
The deletion time.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.delete_time
}

output "deletion_protection" {
  description = <<DESCRIPTION
Whether Terraform will be prevented from destroying the service. Defaults to true.
When a'terraform destroy' or 'terraform apply' would delete the service,
the command will fail if this field is not set to false in Terraform state.
When the field is set to true or unset in Terraform state, a 'terraform apply'
or 'terraform destroy' that would delete the service will fail.
When the field is set to false, deleting the service is allowed.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.deletion_protection
}

output "description" {
  description = <<DESCRIPTION
User-provided description of the Service. This field currently has a 512-character limit.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.description
}

output "effective_annotations" {
  description = <<DESCRIPTION
All of annotations (key/value pairs) present on the resource in GCP, including the annotations configured through Terraform, other clients and services.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.effective_annotations
}

output "effective_labels" {
  description = <<DESCRIPTION
All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.effective_labels
}

output "etag" {
  description = <<DESCRIPTION
A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.etag
}

output "expire_time" {
  description = <<DESCRIPTION
For a deleted resource, the time after which it will be permanently deleted.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.expire_time
}

output "generation" {
  description = <<DESCRIPTION
A number that monotonically increases every time the user modifies the desired state. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a string instead of an integer.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.generation
}

output "id" {
  value = google_cloud_run_v2_service.this.id
}

output "ingress" {
  description = <<DESCRIPTION
Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or INGRESS_TRAFFIC_UNSPECIFIED if no revision is active. Possible values: ["INGRESS_TRAFFIC_ALL", "INGRESS_TRAFFIC_INTERNAL_ONLY", "INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER"]
DESCRIPTION
  value       = google_cloud_run_v2_service.this.ingress
}

output "invoker_iam_disabled" {
  description = <<DESCRIPTION
Disables IAM permission check for run.routes.invoke for callers of this service. For more information, visit https://cloud.google.com/run/docs/securing/managing-access#invoker_check.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.invoker_iam_disabled
}

output "labels" {
  description = <<DESCRIPTION
Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component,
environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.

Cloud Run API v2 does not support labels with  'run.googleapis.com', 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they will be rejected.
All system labels in v1 now have a corresponding field in v2 Service.

**Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
Please refer to the field 'effective_labels' for all of the labels present on the resource.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.labels
}

output "last_modifier" {
  description = <<DESCRIPTION
Email address of the last authenticated modifier.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.last_modifier
}

output "latest_created_revision" {
  description = <<DESCRIPTION
Name of the last created revision. See comments in reconciling for additional information on reconciliation process in Cloud Run.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.latest_created_revision
}

output "latest_ready_revision" {
  description = <<DESCRIPTION
Name of the latest revision that is serving traffic. See comments in reconciling for additional information on reconciliation process in Cloud Run.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.latest_ready_revision
}

output "launch_stage" {
  description = <<DESCRIPTION
The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA.
If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features.

For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output. Possible values: ["UNIMPLEMENTED", "PRELAUNCH", "EARLY_ACCESS", "ALPHA", "BETA", "GA", "DEPRECATED"]
DESCRIPTION
  value       = google_cloud_run_v2_service.this.launch_stage
}

output "location" {
  description = <<DESCRIPTION
The location of the cloud run service
DESCRIPTION
  value       = google_cloud_run_v2_service.this.location
}

output "name" {
  description = <<DESCRIPTION
Name of the Service.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.name
}

output "observed_generation" {
  description = <<DESCRIPTION
The generation of this Service currently serving traffic. See comments in reconciling for additional information on reconciliation process in Cloud Run. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a string instead of an integer.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.observed_generation
}

output "project" {
  value = google_cloud_run_v2_service.this.project
}

output "reconciling" {
  description = <<DESCRIPTION
Returns true if the Service is currently being acted upon by the system to bring it into the desired state.

When a new Service is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Service to the desired serving state. This process is called reconciliation. While reconciliation is in process, observedGeneration, latest_ready_revison, trafficStatuses, and uri will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the serving state matches the Service, or there was an error, and reconciliation failed. This state can be found in terminalCondition.state.

If reconciliation succeeded, the following fields will match: traffic and trafficStatuses, observedGeneration and generation, latestReadyRevision and latestCreatedRevision.

If reconciliation failed, trafficStatuses, observedGeneration, and latestReadyRevision will have the state of the last serving revision, or empty for newly created Services. Additional information on the failure can be found in terminalCondition and conditions.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.reconciling
}

output "terminal_condition" {
  description = <<DESCRIPTION
The Condition of this Service, containing its readiness status, and detailed error information in case it did not reach a serving state. See comments in reconciling for additional information on reconciliation process in Cloud Run.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.terminal_condition
}

output "terraform_labels" {
  description = <<DESCRIPTION
The combination of labels configured directly on the resource
 and default labels configured on the provider.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.terraform_labels
}

output "traffic_statuses" {
  description = <<DESCRIPTION
Detailed status information for corresponding traffic targets. See comments in reconciling for additional information on reconciliation process in Cloud Run.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.traffic_statuses
}

output "uid" {
  description = <<DESCRIPTION
Server assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.uid
}

output "update_time" {
  description = <<DESCRIPTION
The last-modified time.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.update_time
}

output "uri" {
  description = <<DESCRIPTION
The main URI in which this Service is serving traffic.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.uri
}

output "urls" {
  description = <<DESCRIPTION
All URLs serving traffic for this Service.
DESCRIPTION
  value       = google_cloud_run_v2_service.this.urls
}

output "binary_authorization" {
  value = google_cloud_run_v2_service.this.binary_authorization
}

output "build_config" {
  value = google_cloud_run_v2_service.this.build_config
}

output "scaling" {
  value = google_cloud_run_v2_service.this.scaling
}

output "template" {
  value = google_cloud_run_v2_service.this.template
}

output "timeouts" {
  value = google_cloud_run_v2_service.this.timeouts
}

output "traffic" {
  value = google_cloud_run_v2_service.this.traffic
}

output "ignored_volume_mounts" {
  description = "List of volume mounts that overlap with the Datadog shared volume and are ignored by the module."
  value = [for vm in local.all_volume_mounts : vm if !contains(local.filtered_volume_mounts, vm)]
}

output "ignored_containers" {
  description = "List of containers that are ignored by the module."
  value = [for c in coalesce(var.template.containers, []) : c if !contains(local.containers_without_sidecar, c)]
}

output "ignored_volumes" {
  description = "List of volumes that are ignored by the module."
  value = [for v in coalesce(var.template.volumes, []) : v if !contains(local.volumes_without_shared_volume, v)]
}